{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"164mKoI4a7n8Gfq0Jmkn8lE_EDKOtZ_3n","timestamp":1728816767074},{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728565946670}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Введите ваше ФИО:"],"metadata":{"id":"k8oVfdwrMXyc"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728823817716,"user_tz":-300,"elapsed":441,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"3461ca72-56b9-4cf6-c054-84a0707a090a"},"outputs":[{"output_type":"stream","name":"stdout","text":["хабиб самоуел\n"]}],"source":["print('хабиб самоуел')"]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10% (вместо 5%).\n","*  Для заказов более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20% (вместо 15%).\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["cost=float(input('Введите стоимость единицы товара:'))\n","quantity= float(input('Введите количество товара:'))\n","promo_code= input('Введите промокод:')\n","total= cost*quantity\n","сумма = total*(5/100)\n","\n","if promo_code==  'GiVEMEDISCONT':\n","  print('Ваша скидка:5%')\n","  print(f'Итоговая сумма {total-сумма}')\n","else:\n","    print(total)\n"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728816838350,"user_tz":-300,"elapsed":16767,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"9c24ea84-dffe-476b-a046-ca2a016a31f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите стоимость единицы товара:5\n","Введите количество товара:1001\n","Введите промокод:GiVEMEDISCONT\n","Ваша скидка:5%\n","Итоговая сумма4754.75\n"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["numbers = list(map(int,input('type the unmber:').split()))\n","num=''\n","for i in numbers:\n","  if i >= 0:\n","    num += str(i) + ' '\n","\n","print(num)\n"],"metadata":{"id":"Xbi6bL0WOE9N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728819793845,"user_tz":-300,"elapsed":14689,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"6890ca64-264e-4b84-ed87-a0cc74b5fb7c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["type the unmber:-1 5 1 2 -3\n","5 1 2 \n"]}]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","Чуть подробнее, если вы забыли: [link](https://skysmart.ru/articles/mathematic/naibolshij-obshchij-delitel)\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":["num1 = int(input())\n","num2 = int(input())\n","a = num1\n","b = num2\n","while b != 0:\n","    a, b = b, a % b\n","print(a)"],"metadata":{"id":"X2n6fnd91yt7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728820892194,"user_tz":-300,"elapsed":5507,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"81cff39b-01d7-48f4-b210-003fcdfc0a02"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["30\n","18\n","6\n"]}]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["frots=input('')\n","words=frots.split()\n","num={}\n","for word in words:\n","  if word in num:\n","    num[word] += 1\n","  else:\n","    num[word] = 1\n","result = ', '.join(f'{word}: {count}' for word, count in num.items())\n","print(result)"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728823327787,"user_tz":-300,"elapsed":4068,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"8fbdec3e-b7c5-4cb4-c8ec-8838ee172198"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple\n","apple: 2, banana: 1\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":["str1 = input()\n","str2 = input()\n","str1 = str1.replace(\" \", \"\").lower()\n","str2 = str2.replace(\" \", \"\").lower()\n","result = sorted(str1) == sorted(str2)\n","print(result)"],"metadata":{"id":"7LNW8DuHQJwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1732602156199,"user_tz":-300,"elapsed":25202,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"e9e6de02-f96c-4d6c-e422-7ee48b3ca46b"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["listen\n","silent\n","True\n"]}]},{"cell_type":"markdown","source":["**Задача 6:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","Подробнее о шифре Цезаря: [link](https://habr.com/ru/articles/534058/)\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":["def encrypt(message, shift):\n","    encrypted_message = \"\"\n","    for char in message:\n","        if char.isalpha():\n","            shift_base = ord('A') if char.isupper() else ord('a')\n","            new_char = chr((ord(char) - shift_base + shift) % 26 + shift_base)\n","            encrypted_message += new_char\n","        else:\n","            encrypted_message += char\n","    return encrypted_message\n","def decrypt(encrypted_message, shift):\n","    decrypted_message = \"\"\n","    for char in encrypted_message:\n","        if char.isalpha():\n","            shift_base = ord('A') if char.isupper() else ord('a')\n","            new_char = chr((ord(char) - shift_base - shift) % 26 + shift_base)\n","            decrypted_message += new_char\n","        else:\n","            decrypted_message += char\n","    return decrypted_message\n","def main():\n","    message = input(\"Введите сообщение для шифрования: \")\n","    shift = int(input(\"Введите значение сдвига: \"))\n","\n","    encrypted_message = encrypt(message, shift)\n","    print(f\"Зашифрованное сообщение: {encrypted_message}\")\n","\n","    decrypted_message = decrypt(encrypted_message, shift)\n","    print(f\"Расшифрованное сообщение: {decrypted_message}\")\n","\n","main()"],"metadata":{"id":"anThYirsQe6N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728843768188,"user_tz":-300,"elapsed":10542,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"5aee42a9-5b7b-4155-8786-710228bf80b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите сообщение для шифрования: Hello world!\n","Введите значение сдвига: 1\n","Зашифрованное сообщение: Ifmmp xpsme!\n","Расшифрованное сообщение: Hello world!\n"]}]},{"cell_type":"markdown","source":["**Задача 7**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":["accounts, transactions = [], []\n","\n","def create_account(name, balance):\n","    accounts.append([name, balance])\n","    print(f\"Account created for {name} with balance {balance}.\")\n","\n","def deposit(name, amount):\n","    for acc in accounts:\n","        if acc[0] == name:\n","            acc[1] += amount\n","            transactions.append(f\"Deposited {amount} to {name}.\")\n","            return print(f\"{amount} deposited to {name}.\")\n","    print(f\"Account for {name} not found.\")\n","\n","def withdraw(name, amount):\n","    for acc in accounts:\n","        if acc[0] == name:\n","            if acc[1] >= amount:\n","                acc[1] -= amount\n","                transactions.append(f\"Withdrew {amount} from {name}.\")\n","                return print(f\"{amount} withdrawn from {name}.\")\n","            return print(f\"Insufficient funds for {name}.\")\n","    print(f\"Account for {name} not found.\")\n","\n","def get_balance(name):\n","    for acc in accounts:\n","        if acc[0] == name:\n","            return print(f\"{name}'s balance: {acc[1]}.\")\n","    print(f\"Account for {name} not found.\")\n","\n","def transfer(from_name, to_name, amount):\n","    from_acc, to_acc = None, None\n","    for acc in accounts:\n","        if acc[0] == from_name: from_acc = acc\n","        if acc[0] == to_name: to_acc = acc\n","    if from_acc and to_acc:\n","        if from_acc[1] >= amount:\n","            from_acc[1] -= amount\n","            to_acc[1] += amount\n","            transactions.append(f\"Transferred {amount} from {from_name} to {to_name}.\")\n","            return print(f\"{amount} transferred from {from_name} to {to_name}.\")\n","        print(f\"Insufficient funds for {from_name}.\")\n","    else:\n","        print(f\"Account not found: {from_name if not from_acc else to_name}.\")\n","\n","def print_transactions():\n","    print(\"Transaction History:\" + \"\\n\".join(transactions) if transactions else \"No transactions.\")\n","\n","while True:\n","    print(\"\\nWelcome to the Banking System!\")\n","    print(\"1. Create Account\")\n","    print(\"2. Deposit Money\")\n","    print(\"3. Withdraw Money\")\n","    print(\"4. Check Balance\")\n","    print(\"5. Transfer Money\")\n","    print(\"6. Print Transactions\")\n","    print(\"7. Exit\")\n","\n","    choice = input(\"Choose an option (1-7): \")\n","\n","    if choice == '1':\n","        name = input(\"Enter account holder's name: \")\n","        balance = float(input(\"Enter initial balance: \"))\n","        create_account(name, balance)\n","    elif choice == '2':\n","        name = input(\"Enter account holder's name: \")\n","        amount = float(input(\"Enter amount to deposit: \"))\n","        deposit(name, amount)\n","    elif choice == '3':\n","        name = input(\"Enter account holder's name: \")\n","        amount = float(input(\"Enter amount to withdraw: \"))\n","        withdraw(name, amount)\n","    elif choice == '4':\n","        name = input(\"Enter account holder's name: \")\n","        get_balance(name)\n","    elif choice == '5':\n","        from_name = input(\"Enter your name: \")\n","        to_name = input(\"Enter recipient's name: \")\n","        amount = float(input(\"Enter amount to transfer: \"))\n","        transfer(from_name, to_name, amount)\n","    elif choice == '6':\n","        print_transactions()\n","    elif choice == '7':\n","        print(\"Thank you for using the Banking System!\")\n","        break\n","    else:\n","        print(\"Invalid choice. Please try again.\")"],"metadata":{"id":"dWEW10zIRwjs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728844215619,"user_tz":-300,"elapsed":88488,"user":{"displayName":"Самоуел Емил","userId":"05889526955764185974"}},"outputId":"676255a5-b209-458a-ac7b-ea0adf49f8b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Welcome to the Banking System!\n","1. Create Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. Print Transactions\n","7. Exit\n","Choose an option (1-7): 1\n","Enter account holder's name: camouel\n","Enter initial balance: 100000\n","Account created for camouel with balance 100000.0.\n","\n","Welcome to the Banking System!\n","1. Create Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. Print Transactions\n","7. Exit\n","Choose an option (1-7): 5\n","Enter your name: camouel\n","Enter recipient's name: youssef\n","Enter amount to transfer: 1000\n","Account not found: youssef.\n","\n","Welcome to the Banking System!\n","1. Create Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. Print Transactions\n","7. Exit\n","Choose an option (1-7): 7\n","Thank you for using the Banking System!\n"]}]}]}